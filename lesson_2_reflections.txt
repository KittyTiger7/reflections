Question:
How is the staging area different from the working directory and the repository? What value do you think it offers?

			A staging area is where you put files that you want to log as changed in a commit. A repository is the most updated version that was committed. A working directory is where you work on things. Having these compartmentalized aneblaes you to be careful and meticulous about changes you made. It gives a lot of control.


Question:
How can you use the staging area to make sure you have one commit per logical change?

			I can use the git diff --staged to check that indeed I am about to commit the right changes, which contain everything that has to do with that one logical change.


Question:
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

			It'll help when working on different pieces of the code.


Question:
How do the diagrams help you visualize the branch structure?
	
			They are a must! Without them, it would be way more difficult to understand what's going on in a complicated tree.
			With that, it is important to note that new commits that branch out from an existing branch are not logged when you hit git log since there's no reference to them in any place. To see them, you need to checkout the branch that they're on.


Question:
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

			The result of the branch merged into the one checked is that they become one commit & HEAD, hence if you hit git log you see all commits of both branches logged simultaniously, and sorted by time stamp. 
			We represent this in a tree diagram to have a visual representation of this thing.






